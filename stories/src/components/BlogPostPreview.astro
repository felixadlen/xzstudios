---
const {post} = Astro.props;
import {formatDate} from '../utils/helpers'
import PostExcerpt from '@igor.dvlpr/astro-post-excerpt'
import { PropHeadings } from '@igor.dvlpr/astro-post-excerpt';
import { PropRenderer } from '@igor.dvlpr/astro-post-excerpt';

---

<a class="post-preview__link fade-in" href={post.url}>
<article class="post-preview__article">
  <!-- Hopefully we'll be able to use Astro's image integration for this soon -->
  <picture>
    {/* Check if the image path includes a file extension, append .webp for webp format */}
    <source srcset={`${post.frontmatter.image.includes('.') ? post.frontmatter.image : post.frontmatter.image + '.webp'}`} type="image/webp" />

    {/* Check if the image path includes a file extension, append .png as a fallback */}
    <img
        class="post-preview__img"
        src={`${post.frontmatter.image.includes('.') ? post.frontmatter.image : post.frontmatter.image + '.png'}`}
        alt={`Featured image for ${post.frontmatter.title}`}
    />
</picture>

  <div class="post-preview__text">
    <!-- {post.frontmatter?.category && <p class="post-preview__category">{post.frontmatter.category}</p>} -->
    <h2>{post.frontmatter.title}</h2>
    
    <p class="post-excerpt">
      <!-- <PostExcerpt post={post} words={20} addEllipsis={false} /> -->
      <PostExcerpt post={post} words={30} addEllipsis={true} headings={PropHeadings.None} renderer={PropRenderer.Text} />
    </p>
    <p class="post-preview__date">{formatDate(post.frontmatter.publishedAt)}</p>
    <p class="post-content__content">{post.frontmatter.text}</p> 

  </div>
</article>
</a>
  
<style>


.post-preview__link {
  text-decoration: none;
}
.post-preview__link:hover .post-preview__img {
  box-shadow: rgba(0, 0, 0, 0.1) 0 10px 20px 0;
  transform: scale(1.02);
}
.post-preview__link:hover .post-preview__text {
  transform: translateX(0.5rem);
}
.post-preview__article {
  display: grid;
  gap: 0.8rem;
  max-width: 820px;
  grid-template-columns: 1fr 1.8fr;
  align-items: center;
  /* background-color: red; */
}
@media (min-width: 768px) {
  .post-preview__article {
    gap: 3rem;
  }
  
}
.post-preview__text {
  transition: transform 0.2s ease-in-out;
  padding: 0rem 0.5rem;
}
@media (min-width: 768px) {
  .post-preview__text {
  padding: 0rem 0rem;
}
}
.post-preview__category {
  width: fit-content;
  padding: 0.25rem 0.75rem;
  background-color: var(--theme-surface-1);
  border-radius: 2rem;
  margin-bottom: 0.5rem;
  font-size: var(--step--2);
  /* color: #666; */
}
.post-preview__text h2{
  font-size: var(--step-1);
  margin-bottom: 0.6rem;
}
@media (min-width: 768px) {
  .post-preview__text h2 {
    margin-bottom: 0rem
  }
}
  

.post-preview__img {
  width: 280px;
  height: 150px;
  object-fit: cover;
  border-radius: 1rem;
  transition: box-shadow 0.2s ease-in-out, transform 0.2s ease-in-out;
}
.post-preview__date {
  font-size: 1rem;
  color: #666;
  margin-top: 0.8rem;
}
@media (min-width: 768px) {
  .post-preview__date {
    margin-top: 0.4rem;
  }
}
  

@media (max-width: 768px) {
  .post-preview__article {
    grid-template-columns: 1fr;
  }
  .post-preview__img {
    aspect-ratio: 16/9;
    width: 100%;
    height: 100%;
    object-fit: cover;
  }
  .post-preview__text {
    margin-top: 1rem;
  }
  .post-preview__link:hover .post-preview__img {
    box-shadow: none;
    transform: none;
  }
  .post-preview__link:hover .post-preview__text {
    transform: none;
  }
}
</style>